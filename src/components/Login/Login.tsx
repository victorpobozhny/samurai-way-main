import React from 'react';import {connect} from "react-redux";import {login, LoginPropsType, logout} from "../../redux/auth-reducer";import {Field, InjectedFormProps, reduxForm} from "redux-form";import FormControl from "../common/FormControl/FormControl";import {required} from "../../utils/validators/validators";import {AppRootStateType} from "../../redux/redux-store";import {Redirect} from "react-router-dom";type MapDispatchToPropsType = {    login: (data: LoginPropsType) => void    logout: () => void}type MapStateToPropsType = {    isAuth: boolean}export type FormDataType = {    email: string    password: string    rememberMe?: boolean}type OwnProps = MapStateToPropsType & MapDispatchToPropsType;let LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {    return (        <div>            <form onSubmit={props.handleSubmit}>                <div>                    {/*<label htmlFor={'email'}>Email</label>*/}                    <Field placeholder={"Email"} name={"email"}                           tagName={'input'}                           validate={[required]}                           component={FormControl}                    />                </div>                <div>                    {/*<label htmlFor={'password'}>Email</label>*/}                    <Field placeholder={"Password"} name={"password"} type={"password"}                           validate={[required]}                           tagName={'input'}                           component={FormControl}/>                </div>                <div>                    {/*<label htmlFor={'rememberMe'}>Email</label>*/}                    <Field component={FormControl} name={"rememberMe"} type={"checkbox"} tagName={'input'}                    /> remember me                </div>                <div>                    <button type={'submit'}>Submit</button>                </div>            </form>        </div>    );};const LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)class Login extends React.Component<OwnProps> {    submit = (values: FormDataType) => {        // print the form values to the console        console.log(values)        this.props.login(values)    }    render() {        return (            <div>                <h1>                    Login                </h1>                <LoginReduxForm onSubmit={this.submit}/>            </div>        );    }}const _Login = (props: OwnProps) => {    const onSubmit = (values: FormDataType) => {        debugger        console.log(values)        props.login(values)    }    if (props.isAuth) {        return <Redirect to={'/profile'}/>    }    return (        <div>            <h1>                Login            </h1>            <LoginReduxForm onSubmit={onSubmit}/>        </div>    );};const mapStateToProps = (state: AppRootStateType): MapStateToPropsType => ({    isAuth: state.auth.isAuth})export default connect(mapStateToProps, {login, logout})(Login);